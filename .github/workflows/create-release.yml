name: Release

on:
  push:
    branches: [main]

jobs:
  build_linux:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
      RUSTFLAGS: -C link-arg=-Wl,--as-needed
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-unknown-linux-gnu
        profile: minimal
        override: true
    - name: Format
      run: cargo fmt --all -- --check
    - name: Lint
      run: cargo clippy --all-targets -- -D warnings
    - name: Test
      run: cargo test
    - name: Build
      run: cargo build --release --target x86_64-unknown-linux-gnu
    - name: Upload release binary
      uses: actions/upload-artifact@v2
      with:
        name: x86_64-unknown-linux-gnu
        path: target/x86_64-unknown-linux-gnu/release/omnirepo

  build_universal:
    runs-on: macos-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
    - name: Add targets
      run: |
        rustup target add x86_64-apple-darwin
        rustup target add aarch64-apple-darwin
    - name: Format
      run: cargo fmt --all -- --check
    - name: Lint
      run: cargo clippy --all-targets -- -D warnings
    - name: Test
      run: cargo test
    - name: Build
      run: |
        cargo build --release --target x86_64-apple-darwin
        cargo build --release --target aarch64-apple-darwin
    - name: Create universal binary
      run: |
        mkdir -p target/universal/release
        lipo -create -output target/universal/release/omnirepo \
            target/x86_64-apple-darwin/release/omnirepo \
            target/aarch64-apple-darwin/release/omnirepo
    - name: Upload release binary
      uses: actions/upload-artifact@v2
      with:
        name: universal-darwin
        path: target/universal/release/omnirepo

  create_release:
    runs-on: ubuntu-latest
    needs: [build_linux, build_universal]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.REL_TOKEN }}
      with:
        tag_name: v${{ github.ref }}
        release_name: Release v${{ github.ref }}
        draft: false
        prerelease: false

    - name: Download Linux binary
      uses: actions/download-artifact@v2
      with:
        name: x86_64-unknown-linux-gnu
        path: release/linux

    - name: Download universal binary
      uses: actions/download-artifact@v2
      with:
        name: universal-darwin
        path: release/dar

    - name: Upload Linux binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.REL_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release/linux/omnirepo
        asset_name: omnirepo-x86_64-unknown-linux-gnu
        asset_content_type: application/octet-stream

    - name: Upload universal binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.REL_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release/dar/omnirepo
        asset_name: omnirepo-universal-darwin
        asset_content_type: application/octet-stream
